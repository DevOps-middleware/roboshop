- name: this playbook is used to install catalogue
  hosts: catalogue
  become: yes


  tasks:
    - name: run nodejs script to install setup nodejs repo
      ansible.builtin.shell: curl -sL https://rpm.nodesource.com/setup_lts.x | bash

    - name: installing nodejs 
      ansible.builtin.yum:
        name: nodejs
        state: installed

    - name: checking roboshop user exists or not
      ansible.builtin.command: id roboshop
      register: out
      ignore_errors: true

    - name: printing the output of roboshop user 
      ansible.builtin.debug:
       msg: "{{out}}"

    - name: to print the exit status of roboshop user
      ansible.builtin.debug:
        msg: "{{out.rc}}"

    - name: creating a roboshop user
      ansible.builtin.user:
        user: roboshop
      when: out.rc != 0

    - name: condition to check /app directory is presnt or not
      ansible.builtin.stat:
        path: /app
      register: directory

    - name: print the output  /app directory is presnt or not 
      ansible.builtin.debug: 
        msg: "{{directory}}"

    - name: print the output  /app directory is presnt or not 
      ansible.builtin.debug: 
        msg: "{{directory.stat.exists}}"

    - name: creating /app directory
      ansible.builtin.file:
        path: /app
        state: directory
      when: directory.stat.exists == False

    - name: copy the code from s3 bucket to ansible server.
      ansible.builtin.get_url:
        url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
        dest: /tmp
  
    - name: unzip the catalina.zip 
      ansible.builtin.unarchive:
        src: /tmp/catalogue.zip
        dest: /app
        remote_src: yes

    - name: installing the npm command
      ansible.builtin.command: npm install
      args:
        chdir: /app

    - name: copying the catalogue.service 
      ansible.builtin.copy:
        src: catalogue.service
        dest: /etc/systemd/system